#!/usr/bin/env bash

# Check args
if [ $# -ne 3 ] 
then
    echo "Usage: build_n_run <debug/ndebug> <test case file> <num cycles>"
    exit
fi

enable_debug=$1;
bc_asm_file=$2;
num_cycles=$3;
bc_mc_file=${bc_asm_file:0:-2}".mc";
bc_disasm_file=${bc_asm_file:0:-2}".dis";

# Clear build directory
echo "------------------------"
echo "Cleaning build directory"
echo "------------------------"
eval "make clean"

# Build basiccore asm program
echo ""
echo "-----------------------------------"
echo "Building basiccore assembly program"
echo "-----------------------------------"
eval "python2.7 tools/assemble.py -i bc_src/$bc_asm_file | tee bc_build/$bc_mc_file"
# Check if basiccore program assembled successfully
if [ "$?" -ne 0 ] 
then
    exit
fi
echo ""
eval "python2.7 tools/disassemble.py -i bc_build/$bc_mc_file | tee bc_build/$bc_disasm_file"

# Build basiccore simulator
echo ""
echo "----------------------------"
echo "Building basiccore simulator"
echo "----------------------------"
eval "cp Makefile build/"
eval "cp src/* build/"
# Insert machine code and number of sim-cycles into build/main.c file
eval "sed -i '/insert program here/r bc_build/$bc_mc_file' build/main.c"
eval "sed -i '/insert num_cycles here/a int num_cycles = $num_cycles;' build/main.c"
if [ $1 == "ndebug" ] 
then
    eval "cd build && make"
else
    eval "cd build && make debug"
fi
# Check if simulator compiled succesfully
if [ "$?" -ne 0 ] 
then
    exit
fi

# Run simulator
echo ""
echo "-----------------"
echo "Running simulator"
echo "-----------------"
eval "./basiccore"
    


